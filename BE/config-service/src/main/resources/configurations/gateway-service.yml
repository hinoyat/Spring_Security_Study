spring:
  application:
    name: gateway-service
    
  # user-service와 같은 redis 설정을 통해 블랙리스트 공유
  data:
    redis:
      host: localhost
      port: 6379

  # 게이트웨이 설정
  cloud:
    gateway:
      default-filters:
        - GlobalFilter

      routes:
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/users/**
          filters:
            - name: JwtAuthFilter

        - id: auth-logout-service
          uri: lb://user-service
          predicates:
            - Path=/api/auth/logout
          filters:
            - name: JwtAuthFilter

        - id: auth-service-other
          uri: lb://user-service
          predicates:
            - Path=/api/auth/**

        - id: diary-service
          uri: lb://diary-service
          predicates:
            - Path=/api/diaries/**
          filters:
            - name: JwtAuthFilter

        - id: lucky-service
          uri: lb://lucky-service
          predicates:
            - Path=/api/lucky-numbers/**
          filters:
            - name: JwtAuthFilter

server:
  port: 80

logging:
  charset:
    console: 'UTF-8'
    file: 'UTF-8'

  file:
    name: ./log/${spring.application.name}.log

  level:
    com.netflix.eureka: DEBUG
    org.springframework.cloud.netflix.eureka: DEBUG


jwt:
  secret: yourVerySecretKeyHereItShouldBeAtLeast32CharactersLong
  access-token-validity-in-ms: 3600000
  refresh-token-validity-in-ms: 2592000000
  token-prefix: Bearer
  header-string: Authorization

